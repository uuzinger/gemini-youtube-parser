# ---------------------------------------------------------------------------
# Configuration for YouTube Channel Monitor & Summarizer
# ---------------------------------------------------------------------------
# Instructions:
# 1. Fill in your API keys in the [API_KEYS] section.
# 2. Add the YouTube channels you want to monitor in the [CHANNELS] section.
# 3. Configure your email settings for notifications in the [EMAIL] section.
# 4. (Optional) Customize recipients and script behavior in the other sections.
#
# NOTE: For multi-line prompts, indent all lines after the first one with spaces.
# ---------------------------------------------------------------------------

[API_KEYS]
# Get your YouTube Data API v3 key from the Google Cloud Console.
# Make sure the "YouTube Data API v3" is enabled for your project.
youtube_api_key = YOUR_YOUTUBE_DATA_API_V3_KEY

# Get your Gemini API key from Google AI Studio.
# Make sure the "Generative Language API" is enabled for your project.
gemini_api_key = YOUR_GEMINI_API_KEY


[CHANNELS]
# Add channels to monitor here.
# The format is: Your Personal Comment = ChannelID
# The script will use the ChannelID to find videos and fetch the official channel name.
# The comment on the left is for your reference only.
A16z Podcast = UCEsQn_1b9gWn4e4v1i0zV3A
Lex Fridman = UCSsHebO0_wpmK1wIYOw_6GA
Veritasium = UCHnyfMqiRRG1u-2pPa9-8AQ


[GEMINI]
# The name of the Gemini model to use for summarization.
model_name = gemini-1.5-pro-latest

# --- Prompts for the AI ---
# You can customize these prompts. Use {transcript} as the placeholder for the video transcript.

prompt_executive_summary =
  Based on the following transcript, please provide a concise, one-paragraph executive summary.
  Focus on the main topic, key arguments, and the overall conclusion of the video.
  The summary should be easy to understand for someone who has not seen the video.
  TRANSCRIPT:
  {transcript}

prompt_detailed_summary =
  Based on the following transcript, create a detailed, multi-point summary using markdown bullet points.
  Extract the most important topics, discussions, and findings.
  For each point, provide a brief but informative description.
  TRANSCRIPT:
  {transcript}

prompt_key_quotes =
  From the following transcript, extract 3-5 of the most impactful and representative direct quotes.
  Each quote should be on its own line and enclosed in quotation marks.
  Do not add any extra commentary.
  TRANSCRIPT:
  {transcript}

# (Optional) Configure content safety settings for Gemini.
# Format is a comma-separated list of "CATEGORY:THRESHOLD".
# Valid Categories: HARM_CATEGORY_HARASSMENT, HARM_CATEGORY_HATE_SPEECH, HARM_CATEGORY_SEXUALLY_EXPLICIT, HARM_CATEGORY_DANGEROUS_CONTENT
# Valid Thresholds: BLOCK_NONE, BLOCK_ONLY_HIGH, BLOCK_MEDIUM_AND_ABOVE, BLOCK_LOW_AND_ABOVE
# If you leave this blank, the API's default safety settings will be used.
safety_settings = HARM_CATEGORY_HARASSMENT:BLOCK_NONE, HARM_CATEGORY_HATE_SPEECH:BLOCK_MEDIUM_AND_ABOVE


[EMAIL]
# Your SMTP server details for sending email notifications.
# Example for Gmail: smtp_server = smtp.gmail.com
smtp_server = smtp.example.com
smtp_port = 587
smtp_user = your_email@example.com
smtp_password = YOUR_APP_PASSWORD_OR_SMTP_PASSWORD

# The "From" address that will appear in the email.
sender_email = alerts@yourdomain.com


[CHANNEL_RECIPIENTS]
# Configure who receives the email summaries.

# A comma-separated list of emails that will receive summaries from ALL channels.
default_recipients = your.email@example.com, another.person@example.com

# (Optional) Add channel-specific recipients.
# These recipients will be BCC'd on emails for that specific channel,
# in addition to the default_recipients.
# The key MUST be the ChannelID.
UCEsQn_1b9gWn4e4v1i0zV3A = a16z-fan-group@example.com
UCSsHebO0_wpmK1wIYOw_6GA = lex-updates@example.com, another-lex-fan@example.com


[SETTINGS]
# General script settings.

# File to store the IDs of videos that have already been processed.
processed_videos_file = processed_videos.json

# File to write logs to.
log_file = logs/monitor.log

# Directory to save the text summaries.
output_dir = output_summaries

# How many of the latest videos to check per channel on each run.
# A higher number helps catch videos if the script hasn't run in a while.
max_results_per_channel = 3

# (Optional) Skip videos that are shorter than this duration in minutes.
# Set to 0 to process all videos regardless of length.
min_video_duration_minutes = 5