# ==================================================================
# Configuration file for the YouTube Monitor Script
# ==================================================================
# Please replace placeholder values (starting with YOUR_ or like
# channel IDs, example emails) with your actual settings.
# Lines starting with '#' are comments and are ignored.
# ==================================================================

[API_KEYS]
# Get your YouTube Data API v3 key from Google Cloud Console:
# https://console.cloud.google.com/apis/credentials
youtube_api_key = YOUR_YOUTUBE_DATA_API_V3_KEY

# Get your Gemini API key from Google AI Studio:
# https://aistudio.google.com/app/apikey
gemini_api_key = YOUR_GEMINI_API_KEY

[CHANNELS]
# Add the YouTube Channel IDs you want to monitor, separated by commas.
# Find Channel IDs using tools like https://commentpicker.com/youtube-channel-id.php
# Example: channel_ids = UCexampleChannelID12345,UCanotherChannelID67890
channel_ids = UCxxxxxxxxxxxxxxxxxxxxxx,UCyyyyyyyyyyyyyyyyyyyyyy

[GEMINI]
# Specify the Gemini model to use. Examples: "gemini-1.5-pro-latest", "gemini-pro"
model_name = gemini-1.5-pro-latest

# --- Prompts for Gemini ---
# Customize these prompts as needed. The script will insert the video transcript
# where {transcript} is written.

prompt_executive_summary = """
Based on the following YouTube video transcript, provide a concise executive summary (2-3 sentences maximum):

Transcript:
{transcript}

Executive Summary:"""

prompt_detailed_summary = """
Based on the following YouTube video transcript, provide a detailed summary using bullet points. Highlight the key topics, arguments, and information discussed in the video.

Transcript:
{transcript}

Detailed Bulleted Summary:"""

prompt_key_quotes = """
From the following YouTube video transcript, extract 3-5 direct quotes that represent particularly valuable insights, interesting data points, surprising statements, or strong opinions. If fewer than 3 significant quotes are found, list what you find. Ensure quotes are accurate.

Transcript:
{transcript}

Key Quotes/Data Points:"""

# Optional: Configure Gemini safety settings (comma-separated).
# Format: CATEGORY:THRESHOLD
# Valid Categories: HARM_CATEGORY_HARASSMENT, HARM_CATEGORY_HATE_SPEECH, HARM_CATEGORY_SEXUALLY_EXPLICIT, HARM_CATEGORY_DANGEROUS_CONTENT
# Valid Thresholds: BLOCK_NONE, BLOCK_ONLY_HIGH, BLOCK_MEDIUM_AND_ABOVE, BLOCK_LOW_AND_ABOVE
# Example (uncomment and modify if needed):
# safety_settings = HARM_CATEGORY_HARASSMENT:BLOCK_MEDIUM_AND_ABOVE, HARM_CATEGORY_HATE_SPEECH:BLOCK_MEDIUM_AND_ABOVE, HARM_CATEGORY_SEXUALLY_EXPLICIT:BLOCK_MEDIUM_AND_ABOVE, HARM_CATEGORY_DANGEROUS_CONTENT:BLOCK_MEDIUM_AND_ABOVE

[EMAIL]
# --- SMTP Server Settings ---
# Ask your email provider (Gmail, Outlook, etc.) for these details if unsure.
# Example for Gmail: smtp.gmail.com
# Example for Outlook: smtp.office365.com
smtp_server = smtp.example.com

# Common ports: 587 (TLS), 465 (SSL - less common now), 25 (insecure - avoid)
smtp_port = 587

# --- SMTP Credentials ---
# Your full email address used for sending
smtp_user = your_sending_email@example.com

# Your email password.
# !!! IMPORTANT: If using Gmail/Google Workspace with 2-Factor Authentication (2FA),
# you MUST generate and use an "App Password". Do NOT use your regular login password here.
# See: https://support.google.com/accounts/answer/185833
smtp_password = YOUR_EMAIL_PASSWORD_OR_APP_PASSWORD

# --- Email Addresses ---
# The email address that will appear in the "From" field of the notification email.
# Often the same as smtp_user.
sender_email = your_display_sender_email@example.com

# *** THIS IS THE CRITICAL LINE FOR YOUR ERROR ***
# List the email addresses that should receive the notifications, separated by commas.
# Make sure there are NO typos and NO placeholders left here. Replace these examples.
# Example: recipient_emails = myemail@mydomain.com,colleague@work.com,alertlist@example.org
recipient_emails = recipient1_actual_email@example.com,recipient2_real_email@domain.net

[SETTINGS]
# --- Script Operation Settings ---
# Name of the file to store IDs of videos already processed.
processed_videos_file = processed_videos.json

# Name of the log file for script activity.
log_file = monitor.log

# Directory where summary text files will be saved locally.
output_dir = output

# How many of the absolute latest videos to check per channel on each run.
# '1' is usually sufficient for hourly checks to catch the very latest video.
# Increase cautiously, as it increases API usage slightly.
max_results_per_channel = 1