# ==================================================================
# Configuration file for the YouTube Monitor Script v3
# ==================================================================
# Supports DIFFERENT email recipients for DIFFERENT YouTube channels.
# USES INDENTED MULTI-LINE FORMAT for prompts (no triple quotes).
# Please replace placeholder values with your actual settings.
# Lines starting with '#' are comments and are ignored.
# ==================================================================

[API_KEYS]
# Get your YouTube Data API v3 key from Google Cloud Console:
# https://console.cloud.google.com/apis/credentials
youtube_api_key = YOUR_YOUTUBE_DATA_API_V3_KEY

# Get your Gemini API key from Google AI Studio:
# https://aistudio.google.com/app/apikey
gemini_api_key = YOUR_GEMINI_API_KEY

[CHANNELS]
# Add ALL YouTube Channel IDs you want to monitor, separated by commas.
# The script will check this list to know which channels to monitor overall.
# Ensure the case (uppercase UC) is correct.
# Find Channel IDs using tools like https://commentpicker.com/youtube-channel-id.php
# Example: channel_ids = UCexampleChannelID12345,UCanotherChannelID67890,UCthirdChannel111
channel_ids = UCxxxxxxxxxxxxxxxxxxxxxx,UCyyyyyyyyyyyyyyyyyyyyyy,UCzzzzzzzzzzzzzzzzzzzz

[GEMINI]
# Specify the Gemini model to use. Examples: "gemini-1.5-pro-latest", "gemini-pro"
model_name = gemini-1.5-pro-latest

# --- Prompts for Gemini ---
# *** IMPORTANT: Use INDENTATION for multi-line prompts. ***
# Each line continuing the value MUST start with whitespace (e.g., spaces).
# Do NOT use triple quotes (""").
# The placeholder {transcript} will be replaced by the actual video transcript.

prompt_executive_summary =
    Based on the following YouTube video transcript, provide a concise executive summary (2-3 sentences maximum):

    Transcript:
    {transcript}

    Executive Summary:

prompt_detailed_summary =
    Based on the following YouTube video transcript, provide a detailed summary using bullet points. Highlight the key topics, arguments, and information discussed in the video.

    Transcript:
    {transcript}

    Detailed Bulleted Summary:

prompt_key_quotes =
    From the following YouTube video transcript, extract 3-5 direct quotes that represent particularly valuable insights, interesting data points, surprising statements, or strong opinions. If fewer than 3 significant quotes are found, list what you find. Ensure quotes are accurate.

    Transcript:
    {transcript}

    Key Quotes/Data Points:

# Optional: Configure Gemini safety settings (comma-separated).
# Format: CATEGORY:THRESHOLD
# Valid Categories: HARM_CATEGORY_HARASSMENT, HARM_CATEGORY_HATE_SPEECH, HARM_CATEGORY_SEXUALLY_EXPLICIT, HARM_CATEGORY_DANGEROUS_CONTENT
# Valid Thresholds: BLOCK_NONE, BLOCK_ONLY_HIGH, BLOCK_MEDIUM_AND_ABOVE, BLOCK_LOW_AND_ABOVE
# Example (uncomment and modify if needed):
# safety_settings = HARM_CATEGORY_HARASSMENT:BLOCK_MEDIUM_AND_ABOVE, HARM_CATEGORY_HATE_SPEECH:BLOCK_MEDIUM_AND_ABOVE

[EMAIL]
# --- SMTP Server Settings (Used for ALL email sending) ---
# Ask your email provider (Gmail, Outlook, etc.) for these details if unsure.
# Example for Gmail: smtp.gmail.com
# Example for Outlook: smtp.office365.com
smtp_server = smtp.example.com

# Common ports: 587 (TLS), 465 (SSL - less common now), 25 (insecure - avoid)
smtp_port = 587

# --- SMTP Credentials ---
# Your full email address used for sending
smtp_user = your_sending_email@example.com

# Your email password.
# !!! IMPORTANT: If using Gmail/Google Workspace with 2-Factor Authentication (2FA),
# you MUST generate and use an "App Password". Do NOT use your regular login password here.
# See: https://support.google.com/accounts/answer/185833
smtp_password = YOUR_EMAIL_PASSWORD_OR_APP_PASSWORD

# --- Email Addresses ---
# The email address that will appear in the "From" field of the notification email.
# Often the same as smtp_user.
sender_email = your_display_sender_email@example.com
# NOTE: Global 'recipient_emails' key is NOT used here.
#       Recipients are defined below in [CHANNEL_RECIPIENTS].

[CHANNEL_RECIPIENTS]
# --- Define Email Recipients Per Channel ---
# Use the YouTube Channel ID (exactly as listed in [CHANNELS], case-sensitive) as the key.
# Use a comma-separated list of email addresses as the value.
# The Python script is now configured to preserve the case of these keys.
# If a channel from the [CHANNELS] list is NOT found here,
# the 'default_recipients' list will be used.

# --- Specific Channel Mappings ---
# Replace UCxxxxxxxxxxxxxxxxxxxxxx with the first ID from your [CHANNELS] list.
# Replace emails with actual recipient addresses.
UCxxxxxxxxxxxxxxxxxxxxxx = recipient_for_channel_x_1@example.com, recipient_for_channel_x_2@example.com

# Replace UCyyyyyyyyyyyyyyyyyyyyyy with the second ID from your [CHANNELS] list.
UCyyyyyyyyyyyyyyyyyyyyyy = recipient_for_channel_y_1@example.com

# Replace UCzzzzzzzzzzzzzzzzzzzz with the third ID from your [CHANNELS] list.
# If this channel should use the defaults, you can omit this line OR leave the value empty.
# Leaving it empty makes it slightly clearer that it *should* use the default.
UCzzzzzzzzzzzzzzzzzzzz =

# --- Default Recipients ---
# This list is used for any channel listed in [CHANNELS] that DOES NOT
# have its own specific non-empty entry above.
# It is STRONGLY recommended to have a default list, even if it's just one address.
# Replace emails with actual default recipient addresses.
default_recipients = default_recipient1@example.com, default_recipient2@example.com

[SETTINGS]
# --- Script Operation Settings ---
# Name of the file to store IDs of videos already processed. Can include paths.
# Example: processed_videos.json
# Example: /path/to/data/processed_videos.json
processed_videos_file = processed_videos.json

# Name of the log file for script activity. Can include paths.
# Example: monitor.log
# Example: /var/log/youtube_monitor/monitor.log
log_file = monitor.log

# Directory where summary text files will be saved locally. Can include paths.
# Example: output
# Example: /path/to/summaries/output
output_dir = output

# How many of the absolute latest videos to check per channel on each run.
# '1' is usually sufficient for hourly checks to catch the very latest video.
# Increase cautiously, as it increases API usage slightly.
max_results_per_channel = 1